name: "Retrieve JayTech Secrets Map"
description: "Retrieves multiple secrets and sets dynamic outputs based on a JSON map"

inputs:
  jaytech-credential-key:
    description: "Credential Key used to authenticate"
    required: true
  secret-map:
    description: |
      JSON string mapping output keys to secret names.
      Example: { "pat-github": "PAT_GITHUB", "replacements-out": "AZURE_API_KEY_BASE_64" }
    required: true

outputs: {} # We will emit outputs dynamically using GITHUB_OUTPUT

runs:
  using: "composite"
  steps:
    - name: Parse map and fetch secrets
      shell: bash
      run: |
        set -euo pipefail

        echo "📦 Parsing secret map..."
        JAYTECH_SECRET_ID="${{ inputs.jaytech-credential-key }}"
        SECRET_MAP_JSON="${{ inputs.secret-map }}"

        # Debug input (escaped)
        echo "🔍 Raw secret map input:"
        echo "$SECRET_MAP_JSON" | cat -A

        echo "$SECRET_MAP_JSON" > .secret-map.json

        jq -e . .secret-map.json > /dev/null || {
          echo "❌ Invalid JSON passed in 'secret-map'"
          cat .secret-map.json
          exit 1
        }

        jq -r 'to_entries[] | "\(.key)|\(.value)"' .secret-map.json | while IFS='|' read -r OUTPUT_KEY SECRET_NAME; do
          echo "🔑 Retrieving secret '$SECRET_NAME' for output '$OUTPUT_KEY'..."

          RESPONSE=$(curl -s -w "%{http_code}" -o .secret-value.txt \
            -H "jaytech-credential-key: $JAYTECH_SECRET_ID" \
            "https://api.authorization-center.jaytech.nl/v3/secrets/${SECRET_NAME}")

          if [[ "$RESPONSE" != "200" ]]; then
            echo "❌ Failed to fetch secret '${SECRET_NAME}'. HTTP $RESPONSE"
            cat .secret-value.txt
            exit 1
          fi

          VALUE_ESCAPED=$(cat .secret-value.txt | sed 's/"/\\"/g')
          echo "${OUTPUT_KEY}=${VALUE_ESCAPED}" >> "$GITHUB_OUTPUT"
        done

        echo "✅ All secrets retrieved successfully."